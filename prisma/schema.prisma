generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRESQL_ADDRESS")
}

model User {
  id                  String     @id @default(uuid())
  name                String
  email               String     @unique
  password            String?    // Optional for OAuth users
  joinedAt            DateTime   @default(now())
  role                Role       @default(USER)
  active              Boolean    @default(true)
  photo               String     @default("default.jpg")
  isVerified          Boolean    @default(false)
  otp                 String?
  otpExpires          DateTime?
  bio                 String?    @db.VarChar(150)
  cart             CartItem[]
  country             String?    // ISO code â€“ validate in app

  // Flattened address fields
  shippingLocation    String?
  shippingPhone       String?
  billingLocation     String?
  billingPhone        String?

  orders              Order[]    @relation("UserOrders")

  @@index([email])
}

model Order {
  id            String   @id @default(uuid())
  user          User     @relation("UserOrders", fields: [userId], references: [id])
  userId        String

  // Product info comes from MongoDB, so we store just the productId(s)
  productIds    String[] // e.g., ['ObjectId("...")', 'ObjectId("...")']
  
  totalAmount   Float
  createdAt     DateTime @default(now())
  status        String   @default("pending")

  // Optionally you can store denormalized product snapshot data as JSON
  productDetails Json?
}

model CartItem {
  id              String   @id @default(uuid())
  productId       String   // MongoDB ObjectId stored as string
  quantity        Int
  discountedPrice Float

  userId String
  user   User     @relation(fields: [userId], references: [id])

  @@unique([userId, productId]) // Prevent duplicate product in user's cart
}

enum Role {
  ADMIN
  USER
  STAFF
  EMPLOYEE
  MANAGER
}